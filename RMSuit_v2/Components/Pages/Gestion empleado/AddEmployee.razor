@page "/addemployee"
@using RMSuit_v2.Models


@inject ApiService ApiService
@inject ILogger<AddEmployee> Logger
@inject NavigationManager Navigation

<h3>Agregar Empleado</h3>

@if (isLoading)
{
    <p>Cargando...</p>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}
else
{
    <EditForm Model="newEmployee" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="nombre" class="form-label">Nombre</label>
            <InputText id="nombre" class="form-control" @bind-Value="newEmployee.nombre" />
        </div>

        <div class="mb-3">
            <label for="direccion" class="form-label">Dirección</label>
            <InputText id="direccion" class="form-control" @bind-Value="newEmployee.direccion" />
        </div>

        <div class="mb-3">
            <label for="poblacion" class="form-label">Población</label>
            <InputText id="poblacion" class="form-control" @bind-Value="newEmployee.poblacion" />
        </div>

        <div class="mb-3">
            <label for="telefono" class="form-label">Teléfono</label>
            <InputText id="telefono" class="form-control" @bind-Value="newEmployee.telefono" />
        </div>

        <div class="mb-3">
            <label for="clave" class="form-label">Clave</label>
            <InputText id="clave" class="form-control" @bind-Value="newEmployee.clave" />
        </div>

        <div class="mb-3">
            <label for="rango" class="form-label">Rango</label>
            <InputText id="rango" class="form-control" @bind-Value="newEmployee.rango" />
        </div>

        <div class="mb-3">
            <label for="nivel" class="form-label">Nivel</label>
            <InputNumber id="nivel" class="form-control" @bind-Value="newEmployee.nivel" />
        </div>

        <button type="submit" class="btn btn-primary">Agregar Empleado</button>
    </EditForm>

    @if (isSuccess)
    {
        <div class="alert alert-success mt-3">Empleado agregado con éxito.</div>
    }
}

@code {
    private Employee newEmployee = new Employee();
    private bool isLoading = false;
    private bool isSuccess = false;
    private string errorMessage = string.Empty;

    private async Task HandleValidSubmit()
    {
        isSuccess = false;
        errorMessage = string.Empty;
        isLoading = true;

        try
        {
            var result = await ApiService.AddEmployee(newEmployee);
            if (result)
            {
                isSuccess = true;
                Logger.LogInformation("Empleado agregado con éxito.");
                Navigation.NavigateTo("/employees"); // Redirigir a la lista de empleados o a otra página
            }
            else
            {
                errorMessage = "Hubo un error al agregar el empleado.";
                Logger.LogError("Error al agregar el empleado.");
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Hubo un error inesperado.";
            Logger.LogError(ex, "Error inesperado al agregar el empleado.");
        }
        finally
        {
            isLoading = false;
        }
    }
}
